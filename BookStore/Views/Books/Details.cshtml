@model BookStore.Models.Books

@{
    ViewData["Title"] = "Details";
}
<style>
    .review{
        margin-bottom: 20px;
        border-radius: 20px;
        background-color:  #BCE4E8;
    }
</style>

<h1 class="text-center mb-4">@Html.DisplayFor(model => model.Title)</h1>

<div class="card mb-4">
    <div class="card-body">
        <h5 class="card-title">Details</h5>
        <dl class="row">
            <dt class="col-sm-3">Title:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Title)</dd>

            <dt class="col-sm-3">Year Published:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.YearPublished)</dd>

            <dt class="col-sm-3">Number of Pages:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.NumPages)</dd>

            <dt class="col-sm-3">Description:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Description)</dd>

            <dt class="col-sm-3">Publisher:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Publisher)</dd>

            <dt class="col-sm-3">Author:</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Author.FullName)</dd>

            <dt class="col-sm-3">Genres:</dt>
            <dd class="col-sm-9">
                @foreach (var genre in Model.BookGenres)
                {
                    <span>@genre.Genre.GenreName</span>
                    @if (!genre.Equals(Model.BookGenres.Last()))
                    {
                        <span>, </span>
                    }
                }
            </dd>

            <dt class="col-sm-3">Rating:</dt>
            <dd class="col-sm-9">
                @{
                    double sumOfRatings = 0;
                    foreach (var item in Model.Reviews)
                    {
                        sumOfRatings += item.Rating;
                    }
                    double averageRating = 0;
                    if (Model.Reviews.Count > 0)
                    {
                        averageRating = sumOfRatings / (double)Model.Reviews.Count;
                        averageRating = Math.Round(averageRating, 1);
                    }
                    if (averageRating == 0)
                    {
                        <span>No ratings yet</span>
                    }
                    else
                    {
                        <span>@averageRating</span>
                    }
                }
            </dd>
        </dl>
    </div>
</div>

<div class="mt-3">
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Edit</a>
    }
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

<h4 class="mt-5">Reviews</h4>
<hr />
@if (Model.Reviews != null && Model.Reviews.Count > 0)
{
    <div class="list-group review">
        @foreach (var review in Model.Reviews)
        {
            <div class="list-group-item">
                <h5 class="mb-1">@review.AppUser</h5>
                <p class="mb-1">@review.Comment</p>
                <small>Rating: @review.Rating</small>
            </div>
        }
    </div>
    
}
else
{
    <p>No reviews yet.</p>
}
